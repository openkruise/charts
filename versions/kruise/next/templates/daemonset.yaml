{{-  if not (contains "KruiseDaemon=false" .Values.featureGates) }}
{{- if .Values.installation.daemonSet.createNamespace }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.installation.daemonSet.namespace }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kruise-daemon
{{- if .Values.serviceAccount.annotations }}
  annotations:
{{ toYaml .Values.serviceAccount.annotations | indent 4 }}
{{- end }}
  namespace: {{ .Values.installation.daemonSet.namespace }}
{{ ( include "serviceAccountDaemon" . ) }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kruise-daemon
  namespace: {{ .Values.installation.daemonSet.namespace }}
  labels:
    control-plane: daemon
spec:
  selector:
    matchLabels:
      control-plane: daemon
  minReadySeconds: 3
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  template:
    metadata:
      labels:
        control-plane: daemon
    spec:
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- if .Values.daemon.affinity }}
      affinity:
{{ toYaml .Values.daemon.affinity | indent 8 }}
{{- end }}
{{- if .Values.daemon.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.daemon.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - command:
        - /kruise-daemon
        args:
        - --logtostderr=true
        - --v=4
        - --addr=:{{ .Values.daemon.port }}
        - --feature-gates={{ .Values.featureGates }}
        - --socket-file={{ .Values.daemon.socketFile }}
{{- if not .Values.daemon.enablePprof }}
        - --enable-pprof=false
{{- else }}
        - --enable-pprof=true
        - --pprof-addr={{ .Values.daemon.pprofAddr }}
{{- end }}
{{- if .Values.daemon.credentialProvider.enable }}
        - --plugin-config-file=/credential-provider-config/CredentialProviderPlugin.yaml
        - --plugin-bin-dir=/credential-provider-plugin
{{- end }}
        image: {{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}
        imagePullPolicy: Always
        securityContext:
          capabilities:
            drop:
              - all
            add: [ 'NET_BIND_SERVICE' ]
          allowPrivilegeEscalation: false
        name: daemon
        env:
{{- if .Values.enableKubeCacheMutationDetector }}
        - name: KUBE_CACHE_MUTATION_DETECTOR
          value: "true"
{{- end }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        {{- if .Values.daemon.extraEnvs }}
        {{- toYaml .Values.daemon.extraEnvs | nindent 8 }}
        {{- end }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: {{ .Values.daemon.port }}
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          {{- toYaml .Values.daemon.resources | nindent 12 }}
        volumeMounts:
        - mountPath: /hostvarrun
          name: runtime-socket
          readOnly: true
{{- if .Values.daemon.credentialProvider.enable }}
        - name: credential-provider-plugin-config
          mountPath: /credential-provider-config
          readOnly: true
        - name: credential-provider-plugin
          mountPath: /credential-provider-plugin
          readOnly: true
        {{- if ne .Values.daemon.credentialProvider.awsCredentialsDir "" }}
        - name: aws-credentials-dir
          mountPath: /root/.aws
          readOnly: true
        {{- end }}
{{- end }}
      tolerations:
      - operator: Exists
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
      serviceAccountName: kruise-daemon
      volumes:
      - hostPath:
          path: {{ .Values.daemon.socketLocation }}
          type: ""
        name: runtime-socket
{{- if .Values.daemon.credentialProvider.enable }}
      - name: credential-provider-plugin-config
        configMap:
          name: {{ .Values.daemon.credentialProvider.configmap }}
      - hostPath:
          path: {{ .Values.daemon.credentialProvider.hostPath }}
          type: ""
        name: credential-provider-plugin
      {{- if ne .Values.daemon.credentialProvider.awsCredentialsDir "" }}
      - hostPath:
          path: {{ .Values.daemon.credentialProvider.awsCredentialsDir }}
          type: ""
        name: aws-credentials-dir
      {{- end }}
{{- end }}
{{- end }}